FROM debian:bullseye-slim

ENV DEBIAN_FRONTEND=noninteractive

# Устанавливаем базовые пакеты
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    pkg-config \
    libssl-dev \
    git \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Устанавливаем Rust
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Создаем рабочую директорию
WORKDIR /project

# Копируем Cargo файлы для кэширования зависимостей
COPY Cargo.toml Cargo.lock ./
COPY w3b2-connector/Cargo.toml ./w3b2-connector/
COPY w3b2-bridge-program/Cargo.toml ./w3b2-bridge-program/

# Создаем пустые src файлы для кэширования
RUN mkdir -p w3b2-connector/src w3b2-bridge-program/src
RUN echo 'fn main() {}' > w3b2-connector/src/main.rs
RUN echo 'fn main() {}' > w3b2-bridge-program/src/lib.rs

# Собираем зависимости (кэшируем)
RUN cargo build --release

# Копируем исходники
COPY . .

# Собираем проект
RUN cargo build --release

# Создаем директорию для данных
RUN mkdir -p w3b2_db

# Копируем конфигурацию
COPY w3b2-connector/config.toml ./

# Экспонируем порт
EXPOSE 50051

# Запускаем коннектор
CMD ["cargo", "run", "--release", "--bin", "w3b2-connector"]
