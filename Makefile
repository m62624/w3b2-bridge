# W3B2 Bridge Protocol - Docker Management
# =======================================

.PHONY: help build up down restart logs clean dev prod status

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN=\033[0;32m
YELLOW=\033[1;33m
RED=\033[0;31m
NC=\033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)W3B2 Bridge Protocol - Docker Management$(NC)"
	@echo "=============================================="
	@echo ""
	@echo "$(YELLOW)–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)
	@echo ""
	@echo "$(YELLOW)–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:$(NC)"
	@echo "  make up          # –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  make dev         # –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make logs        # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  make down        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"

build: ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ Docker –æ–±—Ä–∞–∑—ã
	@echo "$(GREEN)üîß –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker-compose build --no-cache

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ W3B2 Bridge Protocol...$(NC)"
	@chmod +x scripts/*.sh
	./scripts/docker-start.sh

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Ç–æ–ª—å–∫–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@chmod +x scripts/*.sh
	./scripts/docker-dev.sh

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose down

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose restart

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	docker-compose logs -f

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ backend
	docker-compose logs -f backend

logs-connector: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ connector
	docker-compose logs -f connector

logs-validator: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Solana validator
	docker-compose logs -f solana-validator

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:$(NC)"
	docker-compose ps

clean: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	docker-compose down -v

purge: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã + –æ–±—Ä–∞–∑—ã)
	@echo "$(RED)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...$(NC)"
	docker-compose down -v --rmi all

shell-backend: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	docker-compose exec backend sh

shell-connector: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell connector –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	docker-compose exec connector sh

shell-validator: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell validator –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	docker-compose exec solana-validator sh

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	docker-compose exec backend npm test
	docker-compose exec connector cargo test

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@echo "Solana RPC:"
	@curl -s http://localhost:8899 -X POST -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","id":1,"method":"getHealth"}' || echo "$(RED)‚ùå Solana RPC –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo ""
	@echo "Backend API:"
	@curl -s http://localhost:3001/api/health || echo "$(RED)‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo ""
	@echo "Frontend:"
	@curl -s http://localhost:3000 > /dev/null && echo "$(GREEN)‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω$(NC)" || echo "$(RED)‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
install-backend: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ backend
	cd w3b2-bridge-backend && npm install

install-frontend: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ frontend
	cd w3b2-bridge-frontend && npm install

install: install-backend install-frontend ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

dev-backend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å backend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	cd w3b2-bridge-backend && npm run dev

dev-frontend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å frontend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	cd w3b2-bridge-frontend && npm start

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor: ## –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤
	docker stats

volumes: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ volumes
	docker volume ls | grep w3b2

backup: ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö
	@echo "$(GREEN)üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...$(NC)"
	mkdir -p backups
	docker run --rm -v w3b2-bridge_solana-ledger:/data -v $(PWD)/backups:/backup alpine tar czf /backup/solana-ledger-$(shell date +%Y%m%d-%H%M%S).tar.gz -C /data .
	docker run --rm -v w3b2-bridge_connector-data:/data -v $(PWD)/backups:/backup alpine tar czf /backup/connector-data-$(shell date +%Y%m%d-%H%M%S).tar.gz -C /data .
	docker run --rm -v w3b2-bridge_backend-data:/data -v $(PWD)/backups:/backup alpine tar czf /backup/backend-data-$(shell date +%Y%m%d-%H%M%S).tar.gz -C /data .
	@echo "$(GREEN)‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ –ø–∞–ø–∫–µ backups/$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
debug: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏
	@echo "$(YELLOW)üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏...$(NC)"
	docker-compose -f docker-compose.yml -f docker-compose.debug.yml up

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è production
prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ
	@echo "$(GREEN)üè≠ –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ...$(NC)"
	docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
update: ## –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã
	@echo "$(GREEN)üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker-compose pull
	docker-compose build --no-cache

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
scan: ## –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–∑—ã –Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
		-v $(PWD):/workspace \
		aquasec/trivy image w3b2-bridge_backend:latest

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
docs: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "$(GREEN)üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è W3B2 Bridge Protocol$(NC)"
	@echo "=========================================="
	@echo ""
	@echo "üê≥ Docker:"
	@echo "  README-Docker.md - –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ Docker"
	@echo ""
	@echo "üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:"
	@echo "  README.md - –û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
	@echo "  w3b2-bridge-program/README.md - Solana –ø—Ä–æ–≥—Ä–∞–º–º–∞"
	@echo "  w3b2-connector/README.md - –ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä"
	@echo "  w3b2-bridge-backend/README.md - Backend API"
	@echo "  w3b2-bridge-frontend/README.md - Frontend"
	@echo ""
	@echo "üìä API:"
	@echo "  http://localhost:3001/api/health - Health check"
	@echo "  http://localhost:3001/api/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
	@echo "  http://localhost:3000 - Frontend –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
